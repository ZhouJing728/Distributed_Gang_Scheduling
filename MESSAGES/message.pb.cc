// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MESSAGES/message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_MESSAGES_2fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MESSAGES_2fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_start_time;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MESSAGES_2fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_task;
}  // namespace protobuf_MESSAGES_2fmessage_2eproto
namespace Message {
namespace protobuf {
class scheduleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<schedule>
      _instance;
} _schedule_default_instance_;
class taskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<task>
      _instance;
} _task_default_instance_;
class start_timeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<start_time>
      _instance;
} _start_time_default_instance_;
class Job_gangDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job_gang>
      _instance;
} _Job_gang_default_instance_;
class Message_from_LocalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_from_Local>
      _instance;
} _Message_from_Local_default_instance_;
}  // namespace protobuf
}  // namespace Message
namespace protobuf_MESSAGES_2fmessage_2eproto {
static void InitDefaultsschedule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Message::protobuf::_schedule_default_instance_;
    new (ptr) ::Message::protobuf::schedule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message::protobuf::schedule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_schedule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsschedule}, {
      &protobuf_MESSAGES_2fmessage_2eproto::scc_info_task.base,
      &protobuf_MESSAGES_2fmessage_2eproto::scc_info_start_time.base,}};

static void InitDefaultstask() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Message::protobuf::_task_default_instance_;
    new (ptr) ::Message::protobuf::task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message::protobuf::task::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_task =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstask}, {}};

static void InitDefaultsstart_time() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Message::protobuf::_start_time_default_instance_;
    new (ptr) ::Message::protobuf::start_time();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message::protobuf::start_time::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_start_time =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstart_time}, {}};

static void InitDefaultsJob_gang() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Message::protobuf::_Job_gang_default_instance_;
    new (ptr) ::Message::protobuf::Job_gang();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message::protobuf::Job_gang::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Job_gang =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJob_gang}, {}};

static void InitDefaultsMessage_from_Local() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Message::protobuf::_Message_from_Local_default_instance_;
    new (ptr) ::Message::protobuf::Message_from_Local();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message::protobuf::Message_from_Local::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Message_from_Local =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessage_from_Local}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_schedule.base);
  ::google::protobuf::internal::InitSCC(&scc_info_task.base);
  ::google::protobuf::internal::InitSCC(&scc_info_start_time.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Job_gang.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_from_Local.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::schedule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::schedule, tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::schedule, start_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::task, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::task, duration_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::start_time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::start_time, hour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::start_time, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::start_time, sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::start_time, ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::Job_gang, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::Job_gang, job_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::Job_gang, requested_processors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::Job_gang, job_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::Message_from_Local, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::Message_from_Local, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Message::protobuf::Message_from_Local, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Message::protobuf::schedule)},
  { 7, -1, sizeof(::Message::protobuf::task)},
  { 14, -1, sizeof(::Message::protobuf::start_time)},
  { 23, -1, sizeof(::Message::protobuf::Job_gang)},
  { 31, -1, sizeof(::Message::protobuf::Message_from_Local)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Message::protobuf::_schedule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Message::protobuf::_task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Message::protobuf::_start_time_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Message::protobuf::_Job_gang_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Message::protobuf::_Message_from_Local_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "MESSAGES/message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026MESSAGES/message.proto\022\020Message.protob"
      "uf\"c\n\010schedule\022%\n\005tasks\030\010 \003(\0132\026.Message."
      "protobuf.task\0220\n\nstart_time\030\t \001(\0132\034.Mess"
      "age.protobuf.start_time\",\n\004task\022\017\n\007task_"
      "id\030\002 \001(\005\022\023\n\013duration_ms\030\003 \001(\005\"@\n\nstart_t"
      "ime\022\014\n\004hour\030\004 \001(\005\022\013\n\003min\030\005 \001(\005\022\013\n\003sec\030\006 "
      "\001(\005\022\n\n\002ms\030\007 \001(\003\"J\n\010Job_gang\022\016\n\006job_id\030\n "
      "\001(\005\022\034\n\024requested_processors\030\013 \001(\005\022\020\n\010job"
      "_path\030\014 \001(\t\"5\n\022Message_from_Local\022\017\n\007tas"
      "k_id\030\r \001(\005\022\016\n\006status\030\016 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 394);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MESSAGES/message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_MESSAGES_2fmessage_2eproto
namespace Message {
namespace protobuf {

// ===================================================================

void schedule::InitAsDefaultInstance() {
  ::Message::protobuf::_schedule_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::Message::protobuf::start_time*>(
      ::Message::protobuf::start_time::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int schedule::kTasksFieldNumber;
const int schedule::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

schedule::schedule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MESSAGES_2fmessage_2eproto::scc_info_schedule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.protobuf.schedule)
}
schedule::schedule(const schedule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tasks_(from.tasks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_time()) {
    start_time_ = new ::Message::protobuf::start_time(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Message.protobuf.schedule)
}

void schedule::SharedCtor() {
  start_time_ = NULL;
}

schedule::~schedule() {
  // @@protoc_insertion_point(destructor:Message.protobuf.schedule)
  SharedDtor();
}

void schedule::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
}

void schedule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* schedule::descriptor() {
  ::protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const schedule& schedule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MESSAGES_2fmessage_2eproto::scc_info_schedule.base);
  return *internal_default_instance();
}


void schedule::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.protobuf.schedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasks_.Clear();
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  _internal_metadata_.Clear();
}

bool schedule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.protobuf.schedule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Message.protobuf.task tasks = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Message.protobuf.start_time start_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.protobuf.schedule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.protobuf.schedule)
  return false;
#undef DO_
}

void schedule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.protobuf.schedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Message.protobuf.task tasks = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->tasks(static_cast<int>(i)),
      output);
  }

  // .Message.protobuf.start_time start_time = 9;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_start_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Message.protobuf.schedule)
}

::google::protobuf::uint8* schedule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Message.protobuf.schedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Message.protobuf.task tasks = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->tasks(static_cast<int>(i)), deterministic, target);
  }

  // .Message.protobuf.start_time start_time = 9;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_start_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.protobuf.schedule)
  return target;
}

size_t schedule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.protobuf.schedule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Message.protobuf.task tasks = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->tasks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasks(static_cast<int>(i)));
    }
  }

  // .Message.protobuf.start_time start_time = 9;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void schedule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.protobuf.schedule)
  GOOGLE_DCHECK_NE(&from, this);
  const schedule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const schedule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.protobuf.schedule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.protobuf.schedule)
    MergeFrom(*source);
  }
}

void schedule::MergeFrom(const schedule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.protobuf.schedule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasks_.MergeFrom(from.tasks_);
  if (from.has_start_time()) {
    mutable_start_time()->::Message::protobuf::start_time::MergeFrom(from.start_time());
  }
}

void schedule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.protobuf.schedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void schedule::CopyFrom(const schedule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.protobuf.schedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool schedule::IsInitialized() const {
  return true;
}

void schedule::Swap(schedule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void schedule::InternalSwap(schedule* other) {
  using std::swap;
  CastToBase(&tasks_)->InternalSwap(CastToBase(&other->tasks_));
  swap(start_time_, other->start_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata schedule::GetMetadata() const {
  protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void task::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int task::kTaskIdFieldNumber;
const int task::kDurationMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

task::task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MESSAGES_2fmessage_2eproto::scc_info_task.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.protobuf.task)
}
task::task(const task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&task_id_, &from.task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_ms_) -
    reinterpret_cast<char*>(&task_id_)) + sizeof(duration_ms_));
  // @@protoc_insertion_point(copy_constructor:Message.protobuf.task)
}

void task::SharedCtor() {
  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_ms_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(duration_ms_));
}

task::~task() {
  // @@protoc_insertion_point(destructor:Message.protobuf.task)
  SharedDtor();
}

void task::SharedDtor() {
}

void task::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* task::descriptor() {
  ::protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const task& task::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MESSAGES_2fmessage_2eproto::scc_info_task.base);
  return *internal_default_instance();
}


void task::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.protobuf.task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_ms_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(duration_ms_));
  _internal_metadata_.Clear();
}

bool task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.protobuf.task)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 task_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duration_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.protobuf.task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.protobuf.task)
  return false;
#undef DO_
}

void task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.protobuf.task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 task_id = 2;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_id(), output);
  }

  // int32 duration_ms = 3;
  if (this->duration_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->duration_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Message.protobuf.task)
}

::google::protobuf::uint8* task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Message.protobuf.task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 task_id = 2;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_id(), target);
  }

  // int32 duration_ms = 3;
  if (this->duration_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->duration_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.protobuf.task)
  return target;
}

size_t task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.protobuf.task)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 task_id = 2;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());
  }

  // int32 duration_ms = 3;
  if (this->duration_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.protobuf.task)
  GOOGLE_DCHECK_NE(&from, this);
  const task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.protobuf.task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.protobuf.task)
    MergeFrom(*source);
  }
}

void task::MergeFrom(const task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.protobuf.task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
  if (from.duration_ms() != 0) {
    set_duration_ms(from.duration_ms());
  }
}

void task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.protobuf.task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void task::CopyFrom(const task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.protobuf.task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool task::IsInitialized() const {
  return true;
}

void task::Swap(task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void task::InternalSwap(task* other) {
  using std::swap;
  swap(task_id_, other->task_id_);
  swap(duration_ms_, other->duration_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata task::GetMetadata() const {
  protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void start_time::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int start_time::kHourFieldNumber;
const int start_time::kMinFieldNumber;
const int start_time::kSecFieldNumber;
const int start_time::kMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

start_time::start_time()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MESSAGES_2fmessage_2eproto::scc_info_start_time.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.protobuf.start_time)
}
start_time::start_time(const start_time& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hour_, &from.hour_,
    static_cast<size_t>(reinterpret_cast<char*>(&ms_) -
    reinterpret_cast<char*>(&hour_)) + sizeof(ms_));
  // @@protoc_insertion_point(copy_constructor:Message.protobuf.start_time)
}

void start_time::SharedCtor() {
  ::memset(&hour_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ms_) -
      reinterpret_cast<char*>(&hour_)) + sizeof(ms_));
}

start_time::~start_time() {
  // @@protoc_insertion_point(destructor:Message.protobuf.start_time)
  SharedDtor();
}

void start_time::SharedDtor() {
}

void start_time::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* start_time::descriptor() {
  ::protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const start_time& start_time::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MESSAGES_2fmessage_2eproto::scc_info_start_time.base);
  return *internal_default_instance();
}


void start_time::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.protobuf.start_time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hour_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ms_) -
      reinterpret_cast<char*>(&hour_)) + sizeof(ms_));
  _internal_metadata_.Clear();
}

bool start_time::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.protobuf.start_time)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 hour = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 min = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sec = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ms = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.protobuf.start_time)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.protobuf.start_time)
  return false;
#undef DO_
}

void start_time::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.protobuf.start_time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hour = 4;
  if (this->hour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hour(), output);
  }

  // int32 min = 5;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->min(), output);
  }

  // int32 sec = 6;
  if (this->sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sec(), output);
  }

  // int64 ms = 7;
  if (this->ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Message.protobuf.start_time)
}

::google::protobuf::uint8* start_time::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Message.protobuf.start_time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hour = 4;
  if (this->hour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hour(), target);
  }

  // int32 min = 5;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->min(), target);
  }

  // int32 sec = 6;
  if (this->sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sec(), target);
  }

  // int64 ms = 7;
  if (this->ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.protobuf.start_time)
  return target;
}

size_t start_time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.protobuf.start_time)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 hour = 4;
  if (this->hour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hour());
  }

  // int32 min = 5;
  if (this->min() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min());
  }

  // int32 sec = 6;
  if (this->sec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sec());
  }

  // int64 ms = 7;
  if (this->ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void start_time::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.protobuf.start_time)
  GOOGLE_DCHECK_NE(&from, this);
  const start_time* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const start_time>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.protobuf.start_time)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.protobuf.start_time)
    MergeFrom(*source);
  }
}

void start_time::MergeFrom(const start_time& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.protobuf.start_time)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hour() != 0) {
    set_hour(from.hour());
  }
  if (from.min() != 0) {
    set_min(from.min());
  }
  if (from.sec() != 0) {
    set_sec(from.sec());
  }
  if (from.ms() != 0) {
    set_ms(from.ms());
  }
}

void start_time::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.protobuf.start_time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void start_time::CopyFrom(const start_time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.protobuf.start_time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool start_time::IsInitialized() const {
  return true;
}

void start_time::Swap(start_time* other) {
  if (other == this) return;
  InternalSwap(other);
}
void start_time::InternalSwap(start_time* other) {
  using std::swap;
  swap(hour_, other->hour_);
  swap(min_, other->min_);
  swap(sec_, other->sec_);
  swap(ms_, other->ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata start_time::GetMetadata() const {
  protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job_gang::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job_gang::kJobIdFieldNumber;
const int Job_gang::kRequestedProcessorsFieldNumber;
const int Job_gang::kJobPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job_gang::Job_gang()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MESSAGES_2fmessage_2eproto::scc_info_Job_gang.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.protobuf.Job_gang)
}
Job_gang::Job_gang(const Job_gang& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  job_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_path().size() > 0) {
    job_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_path_);
  }
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&requested_processors_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(requested_processors_));
  // @@protoc_insertion_point(copy_constructor:Message.protobuf.Job_gang)
}

void Job_gang::SharedCtor() {
  job_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requested_processors_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(requested_processors_));
}

Job_gang::~Job_gang() {
  // @@protoc_insertion_point(destructor:Message.protobuf.Job_gang)
  SharedDtor();
}

void Job_gang::SharedDtor() {
  job_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Job_gang::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Job_gang::descriptor() {
  ::protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job_gang& Job_gang::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MESSAGES_2fmessage_2eproto::scc_info_Job_gang.base);
  return *internal_default_instance();
}


void Job_gang::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.protobuf.Job_gang)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requested_processors_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(requested_processors_));
  _internal_metadata_.Clear();
}

bool Job_gang::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.protobuf.Job_gang)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 job_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &job_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requested_processors = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requested_processors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_path = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_path().data(), static_cast<int>(this->job_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Message.protobuf.Job_gang.job_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.protobuf.Job_gang)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.protobuf.Job_gang)
  return false;
#undef DO_
}

void Job_gang::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.protobuf.Job_gang)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 job_id = 10;
  if (this->job_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->job_id(), output);
  }

  // int32 requested_processors = 11;
  if (this->requested_processors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->requested_processors(), output);
  }

  // string job_path = 12;
  if (this->job_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_path().data(), static_cast<int>(this->job_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Message.protobuf.Job_gang.job_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->job_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Message.protobuf.Job_gang)
}

::google::protobuf::uint8* Job_gang::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Message.protobuf.Job_gang)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 job_id = 10;
  if (this->job_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->job_id(), target);
  }

  // int32 requested_processors = 11;
  if (this->requested_processors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->requested_processors(), target);
  }

  // string job_path = 12;
  if (this->job_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_path().data(), static_cast<int>(this->job_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Message.protobuf.Job_gang.job_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->job_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.protobuf.Job_gang)
  return target;
}

size_t Job_gang::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.protobuf.Job_gang)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string job_path = 12;
  if (this->job_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_path());
  }

  // int32 job_id = 10;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->job_id());
  }

  // int32 requested_processors = 11;
  if (this->requested_processors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requested_processors());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Job_gang::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.protobuf.Job_gang)
  GOOGLE_DCHECK_NE(&from, this);
  const Job_gang* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job_gang>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.protobuf.Job_gang)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.protobuf.Job_gang)
    MergeFrom(*source);
  }
}

void Job_gang::MergeFrom(const Job_gang& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.protobuf.Job_gang)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_path().size() > 0) {

    job_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_path_);
  }
  if (from.job_id() != 0) {
    set_job_id(from.job_id());
  }
  if (from.requested_processors() != 0) {
    set_requested_processors(from.requested_processors());
  }
}

void Job_gang::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.protobuf.Job_gang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job_gang::CopyFrom(const Job_gang& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.protobuf.Job_gang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job_gang::IsInitialized() const {
  return true;
}

void Job_gang::Swap(Job_gang* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job_gang::InternalSwap(Job_gang* other) {
  using std::swap;
  job_path_.Swap(&other->job_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(job_id_, other->job_id_);
  swap(requested_processors_, other->requested_processors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Job_gang::GetMetadata() const {
  protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_from_Local::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_from_Local::kTaskIdFieldNumber;
const int Message_from_Local::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_from_Local::Message_from_Local()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MESSAGES_2fmessage_2eproto::scc_info_Message_from_Local.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.protobuf.Message_from_Local)
}
Message_from_Local::Message_from_Local(const Message_from_Local& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  task_id_ = from.task_id_;
  // @@protoc_insertion_point(copy_constructor:Message.protobuf.Message_from_Local)
}

void Message_from_Local::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_ = 0;
}

Message_from_Local::~Message_from_Local() {
  // @@protoc_insertion_point(destructor:Message.protobuf.Message_from_Local)
  SharedDtor();
}

void Message_from_Local::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message_from_Local::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_from_Local::descriptor() {
  ::protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_from_Local& Message_from_Local::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MESSAGES_2fmessage_2eproto::scc_info_Message_from_Local.base);
  return *internal_default_instance();
}


void Message_from_Local::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.protobuf.Message_from_Local)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_ = 0;
  _internal_metadata_.Clear();
}

bool Message_from_Local::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.protobuf.Message_from_Local)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 task_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Message.protobuf.Message_from_Local.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.protobuf.Message_from_Local)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.protobuf.Message_from_Local)
  return false;
#undef DO_
}

void Message_from_Local::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.protobuf.Message_from_Local)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 task_id = 13;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->task_id(), output);
  }

  // string status = 14;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Message.protobuf.Message_from_Local.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Message.protobuf.Message_from_Local)
}

::google::protobuf::uint8* Message_from_Local::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Message.protobuf.Message_from_Local)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 task_id = 13;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->task_id(), target);
  }

  // string status = 14;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Message.protobuf.Message_from_Local.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.protobuf.Message_from_Local)
  return target;
}

size_t Message_from_Local::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.protobuf.Message_from_Local)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string status = 14;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // int32 task_id = 13;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_from_Local::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.protobuf.Message_from_Local)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_from_Local* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_from_Local>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.protobuf.Message_from_Local)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.protobuf.Message_from_Local)
    MergeFrom(*source);
  }
}

void Message_from_Local::MergeFrom(const Message_from_Local& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.protobuf.Message_from_Local)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
}

void Message_from_Local::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.protobuf.Message_from_Local)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_from_Local::CopyFrom(const Message_from_Local& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.protobuf.Message_from_Local)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_from_Local::IsInitialized() const {
  return true;
}

void Message_from_Local::Swap(Message_from_Local* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_from_Local::InternalSwap(Message_from_Local* other) {
  using std::swap;
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(task_id_, other->task_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_from_Local::GetMetadata() const {
  protobuf_MESSAGES_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MESSAGES_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace Message
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Message::protobuf::schedule* Arena::CreateMaybeMessage< ::Message::protobuf::schedule >(Arena* arena) {
  return Arena::CreateInternal< ::Message::protobuf::schedule >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Message::protobuf::task* Arena::CreateMaybeMessage< ::Message::protobuf::task >(Arena* arena) {
  return Arena::CreateInternal< ::Message::protobuf::task >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Message::protobuf::start_time* Arena::CreateMaybeMessage< ::Message::protobuf::start_time >(Arena* arena) {
  return Arena::CreateInternal< ::Message::protobuf::start_time >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Message::protobuf::Job_gang* Arena::CreateMaybeMessage< ::Message::protobuf::Job_gang >(Arena* arena) {
  return Arena::CreateInternal< ::Message::protobuf::Job_gang >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Message::protobuf::Message_from_Local* Arena::CreateMaybeMessage< ::Message::protobuf::Message_from_Local >(Arena* arena) {
  return Arena::CreateInternal< ::Message::protobuf::Message_from_Local >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
