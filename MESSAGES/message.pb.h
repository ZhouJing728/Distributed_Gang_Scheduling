// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MESSAGES/message.proto

#ifndef PROTOBUF_INCLUDED_MESSAGES_2fmessage_2eproto
#define PROTOBUF_INCLUDED_MESSAGES_2fmessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_MESSAGES_2fmessage_2eproto 

namespace protobuf_MESSAGES_2fmessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_MESSAGES_2fmessage_2eproto
namespace Message {
namespace protobuf {
class Job_gang;
class Job_gangDefaultTypeInternal;
extern Job_gangDefaultTypeInternal _Job_gang_default_instance_;
class Message_from_Local;
class Message_from_LocalDefaultTypeInternal;
extern Message_from_LocalDefaultTypeInternal _Message_from_Local_default_instance_;
class Scheduling;
class SchedulingDefaultTypeInternal;
extern SchedulingDefaultTypeInternal _Scheduling_default_instance_;
}  // namespace protobuf
}  // namespace Message
namespace google {
namespace protobuf {
template<> ::Message::protobuf::Job_gang* Arena::CreateMaybeMessage<::Message::protobuf::Job_gang>(Arena*);
template<> ::Message::protobuf::Message_from_Local* Arena::CreateMaybeMessage<::Message::protobuf::Message_from_Local>(Arena*);
template<> ::Message::protobuf::Scheduling* Arena::CreateMaybeMessage<::Message::protobuf::Scheduling>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Message {
namespace protobuf {

// ===================================================================

class Scheduling : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.protobuf.Scheduling) */ {
 public:
  Scheduling();
  virtual ~Scheduling();

  Scheduling(const Scheduling& from);

  inline Scheduling& operator=(const Scheduling& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scheduling(Scheduling&& from) noexcept
    : Scheduling() {
    *this = ::std::move(from);
  }

  inline Scheduling& operator=(Scheduling&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scheduling& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scheduling* internal_default_instance() {
    return reinterpret_cast<const Scheduling*>(
               &_Scheduling_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Scheduling* other);
  friend void swap(Scheduling& a, Scheduling& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scheduling* New() const final {
    return CreateMaybeMessage<Scheduling>(NULL);
  }

  Scheduling* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Scheduling>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Scheduling& from);
  void MergeFrom(const Scheduling& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Scheduling* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message.protobuf.Job_gang tasks = 1;
  int tasks_size() const;
  void clear_tasks();
  static const int kTasksFieldNumber = 1;
  ::Message::protobuf::Job_gang* mutable_tasks(int index);
  ::google::protobuf::RepeatedPtrField< ::Message::protobuf::Job_gang >*
      mutable_tasks();
  const ::Message::protobuf::Job_gang& tasks(int index) const;
  ::Message::protobuf::Job_gang* add_tasks();
  const ::google::protobuf::RepeatedPtrField< ::Message::protobuf::Job_gang >&
      tasks() const;

  // int32 local_id = 2;
  void clear_local_id();
  static const int kLocalIdFieldNumber = 2;
  ::google::protobuf::int32 local_id() const;
  void set_local_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.protobuf.Scheduling)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message::protobuf::Job_gang > tasks_;
  ::google::protobuf::int32 local_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_MESSAGES_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Job_gang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.protobuf.Job_gang) */ {
 public:
  Job_gang();
  virtual ~Job_gang();

  Job_gang(const Job_gang& from);

  inline Job_gang& operator=(const Job_gang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Job_gang(Job_gang&& from) noexcept
    : Job_gang() {
    *this = ::std::move(from);
  }

  inline Job_gang& operator=(Job_gang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Job_gang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Job_gang* internal_default_instance() {
    return reinterpret_cast<const Job_gang*>(
               &_Job_gang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Job_gang* other);
  friend void swap(Job_gang& a, Job_gang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Job_gang* New() const final {
    return CreateMaybeMessage<Job_gang>(NULL);
  }

  Job_gang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Job_gang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Job_gang& from);
  void MergeFrom(const Job_gang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Job_gang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string job_path = 4;
  void clear_job_path();
  static const int kJobPathFieldNumber = 4;
  const ::std::string& job_path() const;
  void set_job_path(const ::std::string& value);
  #if LANG_CXX11
  void set_job_path(::std::string&& value);
  #endif
  void set_job_path(const char* value);
  void set_job_path(const char* value, size_t size);
  ::std::string* mutable_job_path();
  ::std::string* release_job_path();
  void set_allocated_job_path(::std::string* job_path);

  // int32 requested_processors = 3;
  void clear_requested_processors();
  static const int kRequestedProcessorsFieldNumber = 3;
  ::google::protobuf::int32 requested_processors() const;
  void set_requested_processors(::google::protobuf::int32 value);

  // int32 job_id = 8;
  void clear_job_id();
  static const int kJobIdFieldNumber = 8;
  ::google::protobuf::int32 job_id() const;
  void set_job_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.protobuf.Job_gang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr job_path_;
  ::google::protobuf::int32 requested_processors_;
  ::google::protobuf::int32 job_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_MESSAGES_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_from_Local : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.protobuf.Message_from_Local) */ {
 public:
  Message_from_Local();
  virtual ~Message_from_Local();

  Message_from_Local(const Message_from_Local& from);

  inline Message_from_Local& operator=(const Message_from_Local& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_from_Local(Message_from_Local&& from) noexcept
    : Message_from_Local() {
    *this = ::std::move(from);
  }

  inline Message_from_Local& operator=(Message_from_Local&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_from_Local& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_from_Local* internal_default_instance() {
    return reinterpret_cast<const Message_from_Local*>(
               &_Message_from_Local_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Message_from_Local* other);
  friend void swap(Message_from_Local& a, Message_from_Local& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_from_Local* New() const final {
    return CreateMaybeMessage<Message_from_Local>(NULL);
  }

  Message_from_Local* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message_from_Local>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message_from_Local& from);
  void MergeFrom(const Message_from_Local& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_from_Local* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // int32 job_id = 5;
  void clear_job_id();
  static const int kJobIdFieldNumber = 5;
  ::google::protobuf::int32 job_id() const;
  void set_job_id(::google::protobuf::int32 value);

  // int32 local_id = 6;
  void clear_local_id();
  static const int kLocalIdFieldNumber = 6;
  ::google::protobuf::int32 local_id() const;
  void set_local_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.protobuf.Message_from_Local)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::int32 job_id_;
  ::google::protobuf::int32 local_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_MESSAGES_2fmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Scheduling

// repeated .Message.protobuf.Job_gang tasks = 1;
inline int Scheduling::tasks_size() const {
  return tasks_.size();
}
inline void Scheduling::clear_tasks() {
  tasks_.Clear();
}
inline ::Message::protobuf::Job_gang* Scheduling::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:Message.protobuf.Scheduling.tasks)
  return tasks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Message::protobuf::Job_gang >*
Scheduling::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:Message.protobuf.Scheduling.tasks)
  return &tasks_;
}
inline const ::Message::protobuf::Job_gang& Scheduling::tasks(int index) const {
  // @@protoc_insertion_point(field_get:Message.protobuf.Scheduling.tasks)
  return tasks_.Get(index);
}
inline ::Message::protobuf::Job_gang* Scheduling::add_tasks() {
  // @@protoc_insertion_point(field_add:Message.protobuf.Scheduling.tasks)
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::protobuf::Job_gang >&
Scheduling::tasks() const {
  // @@protoc_insertion_point(field_list:Message.protobuf.Scheduling.tasks)
  return tasks_;
}

// int32 local_id = 2;
inline void Scheduling::clear_local_id() {
  local_id_ = 0;
}
inline ::google::protobuf::int32 Scheduling::local_id() const {
  // @@protoc_insertion_point(field_get:Message.protobuf.Scheduling.local_id)
  return local_id_;
}
inline void Scheduling::set_local_id(::google::protobuf::int32 value) {
  
  local_id_ = value;
  // @@protoc_insertion_point(field_set:Message.protobuf.Scheduling.local_id)
}

// -------------------------------------------------------------------

// Job_gang

// int32 job_id = 8;
inline void Job_gang::clear_job_id() {
  job_id_ = 0;
}
inline ::google::protobuf::int32 Job_gang::job_id() const {
  // @@protoc_insertion_point(field_get:Message.protobuf.Job_gang.job_id)
  return job_id_;
}
inline void Job_gang::set_job_id(::google::protobuf::int32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:Message.protobuf.Job_gang.job_id)
}

// int32 requested_processors = 3;
inline void Job_gang::clear_requested_processors() {
  requested_processors_ = 0;
}
inline ::google::protobuf::int32 Job_gang::requested_processors() const {
  // @@protoc_insertion_point(field_get:Message.protobuf.Job_gang.requested_processors)
  return requested_processors_;
}
inline void Job_gang::set_requested_processors(::google::protobuf::int32 value) {
  
  requested_processors_ = value;
  // @@protoc_insertion_point(field_set:Message.protobuf.Job_gang.requested_processors)
}

// string job_path = 4;
inline void Job_gang::clear_job_path() {
  job_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job_gang::job_path() const {
  // @@protoc_insertion_point(field_get:Message.protobuf.Job_gang.job_path)
  return job_path_.GetNoArena();
}
inline void Job_gang::set_job_path(const ::std::string& value) {
  
  job_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.protobuf.Job_gang.job_path)
}
#if LANG_CXX11
inline void Job_gang::set_job_path(::std::string&& value) {
  
  job_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.protobuf.Job_gang.job_path)
}
#endif
inline void Job_gang::set_job_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  job_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.protobuf.Job_gang.job_path)
}
inline void Job_gang::set_job_path(const char* value, size_t size) {
  
  job_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.protobuf.Job_gang.job_path)
}
inline ::std::string* Job_gang::mutable_job_path() {
  
  // @@protoc_insertion_point(field_mutable:Message.protobuf.Job_gang.job_path)
  return job_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job_gang::release_job_path() {
  // @@protoc_insertion_point(field_release:Message.protobuf.Job_gang.job_path)
  
  return job_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job_gang::set_allocated_job_path(::std::string* job_path) {
  if (job_path != NULL) {
    
  } else {
    
  }
  job_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_path);
  // @@protoc_insertion_point(field_set_allocated:Message.protobuf.Job_gang.job_path)
}

// -------------------------------------------------------------------

// Message_from_Local

// int32 job_id = 5;
inline void Message_from_Local::clear_job_id() {
  job_id_ = 0;
}
inline ::google::protobuf::int32 Message_from_Local::job_id() const {
  // @@protoc_insertion_point(field_get:Message.protobuf.Message_from_Local.job_id)
  return job_id_;
}
inline void Message_from_Local::set_job_id(::google::protobuf::int32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:Message.protobuf.Message_from_Local.job_id)
}

// int32 local_id = 6;
inline void Message_from_Local::clear_local_id() {
  local_id_ = 0;
}
inline ::google::protobuf::int32 Message_from_Local::local_id() const {
  // @@protoc_insertion_point(field_get:Message.protobuf.Message_from_Local.local_id)
  return local_id_;
}
inline void Message_from_Local::set_local_id(::google::protobuf::int32 value) {
  
  local_id_ = value;
  // @@protoc_insertion_point(field_set:Message.protobuf.Message_from_Local.local_id)
}

// string status = 7;
inline void Message_from_Local::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_from_Local::status() const {
  // @@protoc_insertion_point(field_get:Message.protobuf.Message_from_Local.status)
  return status_.GetNoArena();
}
inline void Message_from_Local::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.protobuf.Message_from_Local.status)
}
#if LANG_CXX11
inline void Message_from_Local::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.protobuf.Message_from_Local.status)
}
#endif
inline void Message_from_Local::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.protobuf.Message_from_Local.status)
}
inline void Message_from_Local::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.protobuf.Message_from_Local.status)
}
inline ::std::string* Message_from_Local::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:Message.protobuf.Message_from_Local.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_from_Local::release_status() {
  // @@protoc_insertion_point(field_release:Message.protobuf.Message_from_Local.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_from_Local::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:Message.protobuf.Message_from_Local.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace Message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_MESSAGES_2fmessage_2eproto
